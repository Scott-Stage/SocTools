function findAllObjectsWithValueInReport(obj, targetValue) {
  const results = [];

  // Function to search within the "report" node
  function searchInReport(reportObj) {
    for (const key in reportObj) {
      if (reportObj.hasOwnProperty(key)) {
        const value = reportObj[key];

        if (typeof value === 'string') {
          // Split the string value by spaces and newlines
          const parts = value.split(/[\s\n]+/); // Regex to split by one or more whitespace characters (space, newline, tab, etc.)

          for (const part of parts) {
            if (part === targetValue) {
              results.push(reportObj); // Found a match in a part, add the object to results
              return; // Stop searching within this string value once a match is found for efficiency (optional, see note below)
            }
          }
        } else if (typeof value === 'object' && value !== null) {
          searchInReport(value); // Recursive call for nested objects
        }
      }
    }
  }

  //Iterates over root
    for (const key in obj) {
      if (obj.hasOwnProperty(key)) {
         if(key === 'report' && typeof obj[key] === 'object' && obj[key] !== null){
            searchInReport(obj[key]); // Search
         }
      }
    }

  return results; // Return the array of matching objects
}