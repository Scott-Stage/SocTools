function Process-AtomSvcFile {
  param (
    [Parameter(Mandatory = $true, Position = 0)]
    [string]$FilePath
  )

  try {
    # Read the XML content from the file
    [xml]$xmlContent = Get-Content -Path $FilePath -Encoding UTF8

    # Define XML namespaces
    $namespace = New-Object System.Xml.XmlNamespaceManager($xmlContent.NameTable)
    $namespace.AddNamespace("app", "http://www.w3.org/2007/app")
    $namespace.AddNamespace("atom", "http://www.w3.org/2005/Atom")

    # Use XPath to select the workspace element
    $xpathWorkspace = "//app:workspace"
    $workspace = $xmlContent.SelectSingleNode($xpathWorkspace, $namespace)

    if ($workspace) {
        # Use XPath to select the collection element
        $xpathCollection = "./app:collection"
        $collection = $workspace.SelectSingleNode($xpathCollection, $namespace)

        if ($collection) {
            # Extract the href attribute
            $collectionHref = $collection.GetAttribute("href")

            if ($collectionHref) {
                Write-Host "Collection URL: $collectionHref"
                return $collectionHref
            } else {
                Write-Warning "No 'href' attribute found in the collection element of $($FilePath)."
                return $null
            }
        } else {
            Write-Warning "No collection element found in the workspace of $($FilePath)."
            return $null
        }
    } else {
        Write-Warning "No workspace element found in $($FilePath)."
        return $null
    }
  }
  catch {
    Write-Error "Error processing $($FilePath): $($_.Exception.Message)"
    return $null
  }
}

# Example usage:  Replace "C:\Path\To\Your\Service.atomsvc" with your file path.
$atomsvcFilePath = "C:\Path\To\Your\Service.atomsvc"
$collectionUrl = Process-AtomSvcFile -FilePath $atomsvcFilePath


function Get-AtomFeedData {
    param (
        [Parameter(Mandatory = $true, Position = 0)]
        [string]$FeedUrl
    )

    try {
        # Download the Atom feed content
        $webClient = New-Object System.Net.WebClient
        $xmlContent = $webClient.DownloadString($FeedUrl)

        # Convert the content to XML
        [xml]$xmlData = $xmlContent

        # Return the XML data
        return $xmlData
    }
    catch {
        Write-Error "Error retrieving data from $($FeedUrl): $($_.Exception.Message)"
        return $null
    }
}


# Example usage: (Assuming you already have $collectionUrl from the previous script)
if ($collectionUrl) {
    $feedData = Get-AtomFeedData -FeedUrl $collectionUrl

    if ($feedData) {
        # Process the feed data
        Write-Host "Feed Title: $($feedData.feed.title)"

        # Loop through the entries in the feed
        foreach ($entry in $feedData.feed.entry) {
            Write-Host "  Entry Title: $($entry.title)"
            Write-Host "  Entry Content: $($entry.content.'#text')" # Or $entry.summary, depending on feed

            #Example of pulling an id if available
            if($entry.id){
                Write-Host "  Entry ID: $($entry.id)"
            }

            # You can access other elements of the entry here, like author, updated, etc.
        }
    } else {
        Write-Warning "Failed to retrieve feed data from $($collectionUrl)."
    }
} else {
    Write-Warning "No collection URL available.  Process the .atomsvc file first."
}