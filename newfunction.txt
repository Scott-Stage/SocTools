def xml_to_dict(element):
    """Converts an XML element to a dictionary, handling attributes and namespaces."""
    d = {}

    # Add attributes of the current element to the dictionary
    d.update(element.attrib)

    # Process child elements
    children = list(element)
    if children:
        # If there are multiple children with the same tag, create a list
        dd = {}
        for child in children:
            tag = child.tag.split('}')[-1]  # Remove namespace
            child_data = xml_to_dict(child) # recursive call

            if tag in dd:
                if not isinstance(dd[tag], list):
                    dd[tag] = [dd[tag]]  # Convert to a list if it's not already
                dd[tag].append(child_data)
            else:
                dd[tag] = child_data

        # If it's not a leaf node, incorporate the children's data
        d.update(dd)
    else:
        # If it's a leaf node, get the text content (if any)
        if element.text:
            d["value"] = element.text #Use value key to preserve the xml structure

    return d